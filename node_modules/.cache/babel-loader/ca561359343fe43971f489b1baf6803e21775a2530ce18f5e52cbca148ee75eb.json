{"ast":null,"code":"var _s = $RefreshSig$();\n// src/App.js\nimport React, { useState, useEffect } from 'react';\nimport MovieList from './components/MovieList';\nimport Favorites from './components/Favorites';\nimport Login from './components/Login';\nimport Register from './components/Register';\nimport { BrowserRouter as Router, Route, Link, Routes } from 'react-router-dom';\nimport axios from 'axios';\nimport './App.css'; // CSS dosyasını içe aktar\n\nconst App = () => {\n  _s();\n  const [movies, setMovies] = useState([]);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [favorites, setFavorites] = useState([]);\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [userName, setUserName] = useState('');\n\n  // Sayfa yüklendiğinde favorileri localStorage'dan geri yükleme\n  useEffect(() => {\n    const storedFavorites = JSON.parse(localStorage.getItem('favorites'));\n    if (storedFavorites) {\n      setFavorites(storedFavorites);\n    }\n  }, []);\n  const searchMovies = async () => {\n    const response = await axios.get(`http://www.omdbapi.com/?s=${searchTerm}&apikey=f73519fa`);\n    if (response.data.Search) {\n      setMovies(response.data.Search);\n    }\n  };\n  const addToFavorites = movie => {\n    if (!favorites.some(fav => fav.imdbID === movie.imdbID)) {\n      const updatedFavorites = [...favorites, movie];\n      setFavorites(updatedFavorites);\n      localStorage.setItem('favorites', JSON.stringify(updatedFavorites));\n    }\n  };\n  const removeFromFavorites = imdbID => {\n    const updatedFavorites = favorites.filter(fav => fav.imdbID !== imdbID);\n    setFavorites(updatedFavorites);\n    localStorage.setItem('favorites', JSON.stringify(updatedFavorites));\n  };\n  const handleLogin = name => {\n    setIsLoggedIn(true);\n    setUserName(name);\n  };\n  const handleLogout = () => {\n    setIsLoggedIn(false);\n    setUserName('');\n  };\n};\n_s(App, \"CYAgTJ2joIUuZxiY7c2HycGRiVc=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","MovieList","Favorites","Login","Register","BrowserRouter","Router","Route","Link","Routes","axios","App","_s","movies","setMovies","searchTerm","setSearchTerm","favorites","setFavorites","isLoggedIn","setIsLoggedIn","userName","setUserName","storedFavorites","JSON","parse","localStorage","getItem","searchMovies","response","get","data","Search","addToFavorites","movie","some","fav","imdbID","updatedFavorites","setItem","stringify","removeFromFavorites","filter","handleLogin","name","handleLogout","_c","$RefreshReg$"],"sources":["C:/Users/ozgen/OneDrive/Masaüstü/movie-search-app/src/App.js"],"sourcesContent":["// src/App.js\nimport React, { useState, useEffect } from 'react';\nimport MovieList from './components/MovieList';\nimport Favorites from './components/Favorites';\nimport Login from './components/Login';\nimport Register from './components/Register';\nimport { BrowserRouter as Router, Route, Link, Routes } from 'react-router-dom';\nimport axios from 'axios';\nimport './App.css'; // CSS dosyasını içe aktar\n\nconst App = () => {\n  const [movies, setMovies] = useState([]);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [favorites, setFavorites] = useState([]);\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [userName, setUserName] = useState('');\n\n  // Sayfa yüklendiğinde favorileri localStorage'dan geri yükleme\n  useEffect(() => {\n    const storedFavorites = JSON.parse(localStorage.getItem('favorites'));\n    if (storedFavorites) {\n      setFavorites(storedFavorites);\n    }\n  }, []);\n\n  const searchMovies = async () => {\n    const response = await axios.get(`http://www.omdbapi.com/?s=${searchTerm}&apikey=f73519fa`);\n    if (response.data.Search) {\n      setMovies(response.data.Search);\n    }\n  };\n\n  const addToFavorites = (movie) => {\n    if (!favorites.some(fav => fav.imdbID === movie.imdbID)) {\n      const updatedFavorites = [...favorites, movie];\n      setFavorites(updatedFavorites);\n      localStorage.setItem('favorites', JSON.stringify(updatedFavorites));\n    }\n  };\n\n  const removeFromFavorites = (imdbID) => {\n    const updatedFavorites = favorites.filter(fav => fav.imdbID !== imdbID);\n    setFavorites(updatedFavorites);\n    localStorage.setItem('favorites', JSON.stringify(updatedFavorites));\n  };\n\n  const handleLogin = (name) => {\n    setIsLoggedIn(true);\n    setUserName(name);\n  };\n\n  const handleLogout = () => {\n    setIsLoggedIn(false);\n    setUserName('');\n  };\n\n \n};\n\nexport default App;\n"],"mappings":";AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,SAAS,MAAM,wBAAwB;AAC9C,OAAOC,SAAS,MAAM,wBAAwB;AAC9C,OAAOC,KAAK,MAAM,oBAAoB;AACtC,OAAOC,QAAQ,MAAM,uBAAuB;AAC5C,SAASC,aAAa,IAAIC,MAAM,EAAEC,KAAK,EAAEC,IAAI,EAAEC,MAAM,QAAQ,kBAAkB;AAC/E,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAO,WAAW,CAAC,CAAC;;AAEpB,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACgB,UAAU,EAAEC,aAAa,CAAC,GAAGjB,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACkB,SAAS,EAAEC,YAAY,CAAC,GAAGnB,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACoB,UAAU,EAAEC,aAAa,CAAC,GAAGrB,QAAQ,CAAC,KAAK,CAAC;EACnD,MAAM,CAACsB,QAAQ,EAAEC,WAAW,CAAC,GAAGvB,QAAQ,CAAC,EAAE,CAAC;;EAE5C;EACAC,SAAS,CAAC,MAAM;IACd,MAAMuB,eAAe,GAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC,CAAC;IACrE,IAAIJ,eAAe,EAAE;MACnBL,YAAY,CAACK,eAAe,CAAC;IAC/B;EACF,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMK,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC/B,MAAMC,QAAQ,GAAG,MAAMnB,KAAK,CAACoB,GAAG,CAAC,6BAA6Bf,UAAU,kBAAkB,CAAC;IAC3F,IAAIc,QAAQ,CAACE,IAAI,CAACC,MAAM,EAAE;MACxBlB,SAAS,CAACe,QAAQ,CAACE,IAAI,CAACC,MAAM,CAAC;IACjC;EACF,CAAC;EAED,MAAMC,cAAc,GAAIC,KAAK,IAAK;IAChC,IAAI,CAACjB,SAAS,CAACkB,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACC,MAAM,KAAKH,KAAK,CAACG,MAAM,CAAC,EAAE;MACvD,MAAMC,gBAAgB,GAAG,CAAC,GAAGrB,SAAS,EAAEiB,KAAK,CAAC;MAC9ChB,YAAY,CAACoB,gBAAgB,CAAC;MAC9BZ,YAAY,CAACa,OAAO,CAAC,WAAW,EAAEf,IAAI,CAACgB,SAAS,CAACF,gBAAgB,CAAC,CAAC;IACrE;EACF,CAAC;EAED,MAAMG,mBAAmB,GAAIJ,MAAM,IAAK;IACtC,MAAMC,gBAAgB,GAAGrB,SAAS,CAACyB,MAAM,CAACN,GAAG,IAAIA,GAAG,CAACC,MAAM,KAAKA,MAAM,CAAC;IACvEnB,YAAY,CAACoB,gBAAgB,CAAC;IAC9BZ,YAAY,CAACa,OAAO,CAAC,WAAW,EAAEf,IAAI,CAACgB,SAAS,CAACF,gBAAgB,CAAC,CAAC;EACrE,CAAC;EAED,MAAMK,WAAW,GAAIC,IAAI,IAAK;IAC5BxB,aAAa,CAAC,IAAI,CAAC;IACnBE,WAAW,CAACsB,IAAI,CAAC;EACnB,CAAC;EAED,MAAMC,YAAY,GAAGA,CAAA,KAAM;IACzBzB,aAAa,CAAC,KAAK,CAAC;IACpBE,WAAW,CAAC,EAAE,CAAC;EACjB,CAAC;AAGH,CAAC;AAACV,EAAA,CA/CID,GAAG;AAAAmC,EAAA,GAAHnC,GAAG;AAiDT,eAAeA,GAAG;AAAC,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}