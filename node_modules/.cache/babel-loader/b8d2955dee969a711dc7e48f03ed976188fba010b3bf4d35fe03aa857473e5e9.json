{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ozgen\\\\OneDrive\\\\Masa\\xFCst\\xFC\\\\movie-search-app\\\\src\\\\components\\\\MovieList.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MovieList = ({\n  movies,\n  addToFavorites\n}) => {\n  _s();\n  const [updatedMovies, setUpdatedMovies] = useState([]);\n\n  // IMDB detaylarını almak için fonksiyon\n  const getMovieDetails = async imdbID => {\n    const response = await axios.get(`http://www.omdbapi.com/?i=${imdbID}&apikey=YOUR_API_KEY`);\n    return response.data;\n  };\n\n  // Filmler için IMDB puanlarını getiren fonksiyon\n  const fetchMovieRatings = async movies => {\n    const movieWithRatings = await Promise.all(movies.map(async movie => {\n      const details = await getMovieDetails(movie.imdbID);\n      return {\n        ...movie,\n        imdbRating: details.imdbRating\n      };\n    }));\n    setUpdatedMovies(movieWithRatings);\n  };\n\n  // Filmler güncellendiğinde IMDB puanlarını çek\n  useEffect(() => {\n    if (movies.length > 0) {\n      fetchMovieRatings(movies); // IMDB puanlarını çek\n    }\n  }, [movies]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: updatedMovies.map((movie, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: movie.Title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"IMDB Puan\\u0131: \", movie.imdbRating]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"img\", {\n        src: movie.Poster,\n        alt: movie.Title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => addToFavorites(movie),\n        children: \"Favorilere Ekle\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n_s(MovieList, \"42E0JN5dH8kVwmLs/hEJmk5jXaY=\");\n_c = MovieList;\nexport default MovieList;\nvar _c;\n$RefreshReg$(_c, \"MovieList\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","MovieList","movies","addToFavorites","_s","updatedMovies","setUpdatedMovies","getMovieDetails","imdbID","response","get","data","fetchMovieRatings","movieWithRatings","Promise","all","map","movie","details","imdbRating","length","children","index","Title","fileName","_jsxFileName","lineNumber","columnNumber","src","Poster","alt","onClick","_c","$RefreshReg$"],"sources":["C:/Users/ozgen/OneDrive/Masaüstü/movie-search-app/src/components/MovieList.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst MovieList = ({ movies, addToFavorites }) => {\r\n  const [updatedMovies, setUpdatedMovies] = useState([]);\r\n\r\n  // IMDB detaylarını almak için fonksiyon\r\n  const getMovieDetails = async (imdbID) => {\r\n    const response = await axios.get(`http://www.omdbapi.com/?i=${imdbID}&apikey=YOUR_API_KEY`);\r\n    return response.data;\r\n  };\r\n\r\n  // Filmler için IMDB puanlarını getiren fonksiyon\r\n  const fetchMovieRatings = async (movies) => {\r\n    const movieWithRatings = await Promise.all(\r\n      movies.map(async (movie) => {\r\n        const details = await getMovieDetails(movie.imdbID);\r\n        return {\r\n          ...movie,\r\n          imdbRating: details.imdbRating,\r\n        };\r\n      })\r\n    );\r\n    setUpdatedMovies(movieWithRatings);\r\n  };\r\n\r\n  // Filmler güncellendiğinde IMDB puanlarını çek\r\n  useEffect(() => {\r\n    if (movies.length > 0) {\r\n      fetchMovieRatings(movies); // IMDB puanlarını çek\r\n    }\r\n  }, [movies]);\r\n\r\n  return (\r\n    <div>\r\n      {updatedMovies.map((movie, index) => (\r\n        <div key={index}>\r\n          <h3>{movie.Title}</h3>\r\n          <p>IMDB Puanı: {movie.imdbRating}</p> {/* IMDB Puanını göster */}\r\n          <img src={movie.Poster} alt={movie.Title} />\r\n          <button onClick={() => addToFavorites(movie)}>Favorilere Ekle</button>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MovieList;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,SAAS,GAAGA,CAAC;EAAEC,MAAM;EAAEC;AAAe,CAAC,KAAK;EAAAC,EAAA;EAChD,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;;EAEtD;EACA,MAAMW,eAAe,GAAG,MAAOC,MAAM,IAAK;IACxC,MAAMC,QAAQ,GAAG,MAAMX,KAAK,CAACY,GAAG,CAAC,6BAA6BF,MAAM,sBAAsB,CAAC;IAC3F,OAAOC,QAAQ,CAACE,IAAI;EACtB,CAAC;;EAED;EACA,MAAMC,iBAAiB,GAAG,MAAOV,MAAM,IAAK;IAC1C,MAAMW,gBAAgB,GAAG,MAAMC,OAAO,CAACC,GAAG,CACxCb,MAAM,CAACc,GAAG,CAAC,MAAOC,KAAK,IAAK;MAC1B,MAAMC,OAAO,GAAG,MAAMX,eAAe,CAACU,KAAK,CAACT,MAAM,CAAC;MACnD,OAAO;QACL,GAAGS,KAAK;QACRE,UAAU,EAAED,OAAO,CAACC;MACtB,CAAC;IACH,CAAC,CACH,CAAC;IACDb,gBAAgB,CAACO,gBAAgB,CAAC;EACpC,CAAC;;EAED;EACAhB,SAAS,CAAC,MAAM;IACd,IAAIK,MAAM,CAACkB,MAAM,GAAG,CAAC,EAAE;MACrBR,iBAAiB,CAACV,MAAM,CAAC,CAAC,CAAC;IAC7B;EACF,CAAC,EAAE,CAACA,MAAM,CAAC,CAAC;EAEZ,oBACEF,OAAA;IAAAqB,QAAA,EACGhB,aAAa,CAACW,GAAG,CAAC,CAACC,KAAK,EAAEK,KAAK,kBAC9BtB,OAAA;MAAAqB,QAAA,gBACErB,OAAA;QAAAqB,QAAA,EAAKJ,KAAK,CAACM;MAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACtB3B,OAAA;QAAAqB,QAAA,GAAG,mBAAY,EAACJ,KAAK,CAACE,UAAU;MAAA;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,KAAC,eACtC3B,OAAA;QAAK4B,GAAG,EAAEX,KAAK,CAACY,MAAO;QAACC,GAAG,EAAEb,KAAK,CAACM;MAAM;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAC5C3B,OAAA;QAAQ+B,OAAO,EAAEA,CAAA,KAAM5B,cAAc,CAACc,KAAK,CAAE;QAAAI,QAAA,EAAC;MAAe;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA,GAJ9DL,KAAK;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAKV,CACN;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACvB,EAAA,CA1CIH,SAAS;AAAA+B,EAAA,GAAT/B,SAAS;AA4Cf,eAAeA,SAAS;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}