{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ozgen\\\\OneDrive\\\\Masa\\xFCst\\xFC\\\\movie-search-app\\\\src\\\\components\\\\MovieList.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MovieList = ({\n  movies,\n  addToFavorites\n}) => {\n  _s();\n  const [movieDetails, setMovieDetails] = useState({}); // Film detaylarını tutmak için state\n\n  // Film detaylarını çekmek için bir fonksiyon\n  const fetchMovieDetails = async imdbID => {\n    try {\n      const response = await axios.get(`http://www.omdbapi.com/?i=${imdbID}&apikey=f73519fa`);\n      setMovieDetails(prevDetails => ({\n        ...prevDetails,\n        [imdbID]: response.data // imdbID'yi key olarak saklıyoruz\n      }));\n    } catch (error) {\n      console.error('Film detaylarını çekerken hata oluştu:', error);\n    }\n  };\n  useEffect(() => {\n    movies.forEach(movie => {\n      if (!movieDetails[movie.imdbID]) {\n        // Eğer film detayları daha önce yüklenmediyse\n        fetchMovieDetails(movie.imdbID); // imdbID ile API çağrısı yap\n      }\n    });\n    // movieDetails'i bağımlılık dizisine eklemekten kaçının\n  }, [movies, fetchMovieDetails]); // Sadece movies ve fetchMovieDetails bağımlılıkları var\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: movies.map(movie => /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: '20px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: movie.Title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: movie.Year\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }, this), movieDetails[movie.imdbID] ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"IMDb Puan\\u0131: \", movieDetails[movie.imdbID].imdbRating]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"IMDb Puan\\u0131 Y\\xFCkleniyor...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => addToFavorites(movie),\n        children: \"Favorilere Ekle\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, this)]\n    }, movie.imdbID, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n_s(MovieList, \"XPQgXvXctq5H5k3xDf6tfzGm0JA=\");\n_c = MovieList;\nexport default MovieList;\nvar _c;\n$RefreshReg$(_c, \"MovieList\");","map":{"version":3,"names":["React","useEffect","useState","axios","jsxDEV","_jsxDEV","MovieList","movies","addToFavorites","_s","movieDetails","setMovieDetails","fetchMovieDetails","imdbID","response","get","prevDetails","data","error","console","forEach","movie","children","map","style","marginBottom","Title","fileName","_jsxFileName","lineNumber","columnNumber","Year","imdbRating","onClick","_c","$RefreshReg$"],"sources":["C:/Users/ozgen/OneDrive/Masaüstü/movie-search-app/src/components/MovieList.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst MovieList = ({ movies, addToFavorites }) => {\r\n  const [movieDetails, setMovieDetails] = useState({}); // Film detaylarını tutmak için state\r\n\r\n  // Film detaylarını çekmek için bir fonksiyon\r\n  const fetchMovieDetails = async (imdbID) => {\r\n    try {\r\n      const response = await axios.get(`http://www.omdbapi.com/?i=${imdbID}&apikey=f73519fa`);\r\n      setMovieDetails(prevDetails => ({\r\n        ...prevDetails,\r\n        [imdbID]: response.data // imdbID'yi key olarak saklıyoruz\r\n      }));\r\n    } catch (error) {\r\n      console.error('Film detaylarını çekerken hata oluştu:', error);\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    movies.forEach(movie => {\r\n      if (!movieDetails[movie.imdbID]) { // Eğer film detayları daha önce yüklenmediyse\r\n        fetchMovieDetails(movie.imdbID); // imdbID ile API çağrısı yap\r\n      }\r\n    });\r\n    // movieDetails'i bağımlılık dizisine eklemekten kaçının\r\n  }, [movies, fetchMovieDetails]); // Sadece movies ve fetchMovieDetails bağımlılıkları var\r\n  \r\n  \r\n\r\n  return (\r\n    <div>\r\n      {movies.map((movie) => (\r\n        <div key={movie.imdbID} style={{ marginBottom: '20px' }}>\r\n          <h3>{movie.Title}</h3>\r\n          <p>{movie.Year}</p>\r\n          {/* Eğer detaylar yüklendiyse IMDb puanını göster */}\r\n          {movieDetails[movie.imdbID] ? (\r\n            <p>IMDb Puanı: {movieDetails[movie.imdbID].imdbRating}</p>\r\n          ) : (\r\n            <p>IMDb Puanı Yükleniyor...</p>\r\n          )}\r\n          <button onClick={() => addToFavorites(movie)}>Favorilere Ekle</button>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MovieList;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,SAAS,GAAGA,CAAC;EAAEC,MAAM;EAAEC;AAAe,CAAC,KAAK;EAAAC,EAAA;EAChD,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGT,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;;EAEtD;EACA,MAAMU,iBAAiB,GAAG,MAAOC,MAAM,IAAK;IAC1C,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMX,KAAK,CAACY,GAAG,CAAC,6BAA6BF,MAAM,kBAAkB,CAAC;MACvFF,eAAe,CAACK,WAAW,KAAK;QAC9B,GAAGA,WAAW;QACd,CAACH,MAAM,GAAGC,QAAQ,CAACG,IAAI,CAAC;MAC1B,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,wCAAwC,EAAEA,KAAK,CAAC;IAChE;EACF,CAAC;EACDjB,SAAS,CAAC,MAAM;IACdM,MAAM,CAACa,OAAO,CAACC,KAAK,IAAI;MACtB,IAAI,CAACX,YAAY,CAACW,KAAK,CAACR,MAAM,CAAC,EAAE;QAAE;QACjCD,iBAAiB,CAACS,KAAK,CAACR,MAAM,CAAC,CAAC,CAAC;MACnC;IACF,CAAC,CAAC;IACF;EACF,CAAC,EAAE,CAACN,MAAM,EAAEK,iBAAiB,CAAC,CAAC,CAAC,CAAC;;EAIjC,oBACEP,OAAA;IAAAiB,QAAA,EACGf,MAAM,CAACgB,GAAG,CAAEF,KAAK,iBAChBhB,OAAA;MAAwBmB,KAAK,EAAE;QAAEC,YAAY,EAAE;MAAO,CAAE;MAAAH,QAAA,gBACtDjB,OAAA;QAAAiB,QAAA,EAAKD,KAAK,CAACK;MAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACtBzB,OAAA;QAAAiB,QAAA,EAAID,KAAK,CAACU;MAAI;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,EAElBpB,YAAY,CAACW,KAAK,CAACR,MAAM,CAAC,gBACzBR,OAAA;QAAAiB,QAAA,GAAG,mBAAY,EAACZ,YAAY,CAACW,KAAK,CAACR,MAAM,CAAC,CAACmB,UAAU;MAAA;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,gBAE1DzB,OAAA;QAAAiB,QAAA,EAAG;MAAwB;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAC/B,eACDzB,OAAA;QAAQ4B,OAAO,EAAEA,CAAA,KAAMzB,cAAc,CAACa,KAAK,CAAE;QAAAC,QAAA,EAAC;MAAe;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA,GAT9DT,KAAK,CAACR,MAAM;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAUjB,CACN;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACrB,EAAA,CA3CIH,SAAS;AAAA4B,EAAA,GAAT5B,SAAS;AA6Cf,eAAeA,SAAS;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}